//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2021-2023 BIA-Technologies Limited Liability Company
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

#Область СлужебныйПрограммныйИнтерфейс

Процедура ИсполняемыеСценарии() Экспорт
	
	ЮТТесты.ВТранзакции()
		.ДобавитьТест("ОбработкаПроведения")
		.ДобавитьТест("ОбработкаПроверкиЗаполнения")
	;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбработкаПроверкиЗаполнения() Экспорт
	
	Документ = Документы.ПродажаБилета.СоздатьДокумент();
	
	Описание = "Незаполненный документ";
	ЮТест.ОжидаетЧто(Документ.ПроверитьЗаполнение())
		.ЭтоЛожь();
	
	ЮТест.ОжидаетЧто(ПомощникТестирования.Сообщения(Истина), Описание)
		.Содержит("Не введено ни одной строки в список ""Позиции продажи""")
		.Содержит("Поле ""Сумма документа"" не заполнено")
		.Содержит("Поле ""Дата"" не заполнено")
	;
	
	Документ.Дата = ЮТест.Данные().СлучайнаяДата();
	Документ.СуммаДокумента = ЮТест.Данные().СлучайноеЧисло();
	Документ.ПозицииПродажи.Добавить();
	
	Описание = "Не заполнена строка продаж";
	ЮТест.ОжидаетЧто(Документ.ПроверитьЗаполнение())
		.ЭтоЛожь();
	
	ЮТест.ОжидаетЧто(ПомощникТестирования.Сообщения(Истина), Описание)
		.Содержит("Не заполнена колонка ""Номенклатура"" в строке 1 списка ""Позиции продажи""")
		.Содержит("Не заполнена колонка ""Цена"" в строке 1 списка ""Позиции продажи""")
		.Содержит("Не заполнена колонка ""Количество"" в строке 1 списка ""Позиции продажи""")
		.Содержит("Не заполнена колонка ""Сумма"" в строке 1 списка ""Позиции продажи""")
	;
	
	Документ.ПозицииПродажи[0].Номенклатура = ПомощникТестирования.Номенклатура();
	Документ.ПозицииПродажи[0].Цена = ЮТест.Данные().СлучайноеЧисло();
	Документ.ПозицииПродажи[0].Количество = ЮТест.Данные().СлучайноеЧисло();
	Документ.ПозицииПродажи[0].Сумма = ЮТест.Данные().СлучайноеЧисло();
	
	Описание = "Документ заполнен";
	ЮТест.ОжидаетЧто(Документ.ПроверитьЗаполнение())
		.ЭтоИстина();
	
	Описание = "Не указан клиент для списания балов";
	Документ.БаллыКСписанию = ЮТест.Данные().СлучайноеЧисло();
	
	ЮТест.ОжидаетЧто(Документ.ПроверитьЗаполнение())
		.ЭтоЛожь();
	
	ЮТест.ОжидаетЧто(ПомощникТестирования.Сообщения(Истина), Описание)
		.Содержит("Для списания баллов необходимо указать клиента");
	
	Описание = "Превышение баллов";
	Документ.Клиент = ПомощникТестирования.Клиент();
	Документ.БаллыКСписанию = Документ.ПозицииПродажи[0].Сумма + 1;
	
	ЮТест.ОжидаетЧто(Документ.ПроверитьЗаполнение())
		.ЭтоЛожь();
	
	ЮТест.ОжидаетЧто(ПомощникТестирования.Сообщения(Истина), Описание)
		.Содержит("Списываемые баллы не должны превышать сумму продажи");
	
//	Описание = "Превышение максимальной доли";
//	
//	Константы.МаксимальнаяДоляОплатыБаллами.Установить(50);
//	Документ.БаллыКСписанию = Документ.ПозицииПродажи[0].Сумма / 2 + 1;
//	
//	ЮТест.ОжидаетЧто(Документ.ПроверитьЗаполнение())
//		.ЭтоЛожь();
//	
//	ЮТест.ОжидаетЧто(ПомощникТестирования.Сообщения(Истина), Описание)
//		.Содержит("Доля списываемых баллов от суммы продажи больше допустимой (50%)");
	
	ЮТест.ОжидаетЧто(Документ)
		.Метод("Записать").Параметр(РежимЗаписиДокумента.Проведение)
		.ВыбрасываетИсключение("Ошибка при вызове метода контекста (Записать)");
	ЮТест.ОжидаетЧто(ПомощникТестирования.Сообщения(Истина), Описание)
		.Содержит("Не хватает баллов для списания, на балансе 0");
	
КонецПроцедуры

Процедура ОбработкаПроведения() Экспорт
	
	ВидАтракциона = ЮТест.Данные().СоздатьЭлемент(Справочники.ВидыАттракционов);
	Билет = ПомощникТестирования.Номенклатура(1, ВидАтракциона);
	Документ = ПомощникТестирования.ПродажаБилета(2, Билет);
	
	Движения = ЮТЗапросы.ДвиженияДокумента(Документ, "РегистрНакопления.АктивныеПосещения");
	
	ЮТест.ОжидаетЧто(Движения)
		.Заполнено()
		.ИмеетДлину(1)
		.Свойство("[0].ВидДвижения").Равно(ВидДвиженияНакопления.Приход)
		.Свойство("[0].Основание").Равно(Документ)
		.Свойство("[0].ВидАттракциона").Равно(ВидАтракциона)
		.Свойство("[0].КоличествоПосещений").Равно(2)
	;
	
	Движения = ЮТЗапросы.ДвиженияДокумента(Документ, "РегистрНакопления.Продажи");
	
	ЮТест.ОжидаетЧто(Движения)
		.Заполнено()
		.ИмеетДлину(1)
		.Свойство("[0].Период").Равно(Документ.Дата)
		.Свойство("[0].Клиент").НеЗаполнено()
		.Свойство("[0].ВидАттракциона").Равно(ВидАтракциона)
		.Свойство("[0].Номенклатура").Равно(Билет)
		.Свойство("[0].Сумма").Равно(Документ.ПозицииПродажи[0].Сумма)
	;
	
	Движения = ЮТЗапросы.ДвиженияДокумента(Документ, "РегистрНакопления.БонусныеБаллыКлиентов");
	
	ЮТест.ОжидаетЧто(Движения)
		.НеЗаполнено();
	;
КонецПроцедуры

#КонецОбласти
